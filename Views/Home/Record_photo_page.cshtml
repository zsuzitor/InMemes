@model Im.Models.Memes_record
@{ 
    AjaxOptions ajaxOpts = new AjaxOptions
    {
        UpdateTargetId = "Record_photo_page_one_photo_block_id",
        Url = Url.Action("Action_memes"),
        InsertionMode = InsertionMode.Replace

    };
}
@{
    string Record_photo_page_small_like_name = "Record_photo_page_right_block_small";
    string Record_photo_page_small_repost_name = "Record_photo_page_right_block_small";
    if (ViewBag.like!=null&&(bool)ViewBag.like)
    {
        Record_photo_page_small_like_name = "Record_photo_page_right_block_small_true";
    }
    if (ViewBag.repost!=null&&(bool)ViewBag.repost)
    {
        Record_photo_page_small_repost_name = "Record_photo_page_right_block_small_true";
    }
}


    @if (Model != null)
    {
        <div class="Record_photo_page_one_photo_block_inside_lvl_exit">
            @Ajax.ActionLink(" ", "Record_photo_page", "Home", new {  }, new AjaxOptions { UpdateTargetId = "Record_photo_page_one_photo_block_id" }, new { @class = "link_standart_for_div" })


            <div class="Record_photo_page_one_photo_block_inside">
                <div class="Record_photo_page_prev_next_button">
                    @Ajax.ActionLink("<", "Record_photo_page", "Home", new { from_id=ViewBag.from_id, from_type=ViewBag.from_type, album_name=Model.Image.Albums, id_image = ViewBag.Next_img_id, main_img= ViewBag.main_img }, new AjaxOptions { UpdateTargetId = "Record_photo_page_one_photo_block_id" }, new { @class = "link_standart_for_button_prev_next_photo" })
                </div>
                <div class="Record_photo_page_photo" style="background:url( data:image/jpeg;base64,@Convert.ToBase64String(Model.Image.bytes) );background-size: cover; ">

                </div>
                <div class="Record_photo_page_prev_next_button Record_photo_page_next_sub">
@Ajax.ActionLink(">", "Record_photo_page", "Home", new { from_id = ViewBag.from_id, from_type = ViewBag.from_type, album_name = Model.Image.Albums, id_image = ViewBag.Preview_img_id, main_img = ViewBag.main_img }, new AjaxOptions { UpdateTargetId = "Record_photo_page_one_photo_block_id" }, new { @class = "link_standart_for_button_prev_next_photo" })

                </div>
                <div class="Record_photo_page_right_info_block">
                    <div>

                        @if (ViewBag.Albums != null)
                        {
                        using (@Ajax.BeginForm(ajaxOpts))
                        {

                            @Html.Hidden("id", Model.db.Id)
                                @Html.Hidden("from", "Record_photo_page")
                            @Html.Hidden("action_m", "change_album")
                            
                                @Html.DropDownList("obg", new SelectList(ViewBag.Albums), "Изменить альбом")
                            

                            <input type="submit" class="submit" value="изменить" />
                        }
                        }
                        @{ 
                            /*@using (Html.BeginForm("Action_image", "Home"))
                        {
                            @Html.Hidden("id", Model.Id)
                            @Html.Hidden("action_m", "change_album")

                            @Html.DropDownList("obg", new SelectList(ViewBag.Albums), "Изменить альбом")
                            <input type="submit" class="submit" value="изменить" />
                        }*/
                        }
                        
                        
                    </div>
                    <div class="">
                        @Html.ActionLink("Удалить", "Delete", "Home", new { what = "photo", from = ViewBag.from_type, from_id = ViewBag.from_id, id = Model.db.Id, }, new { })
                    </div>
                    <div>
                    <div class=@Record_photo_page_small_like_name>
                        @Ajax.ActionLink("Лайков:" + ((int)ViewBag.count_like).ToString(), "Action_memes", "Home",
new { id = Model.db.Id, action_m = "like",from= "Record_photo_page" },
new AjaxOptions { UpdateTargetId = string.Concat("Wall_memes_mem_block_id_", Model.db.Id) }, new { @class = "link_standart_for_div" })
                        @{
//ViewBag.like от этого класс
// ViewBag.repost
                        }
                        </div>
                    <div  class="Record_photo_page_right_block_small">
                        

                    </div>
                        <div class=@Record_photo_page_small_repost_name>
                            @Ajax.ActionLink("Репостов:" + ((int)ViewBag.count_repost).ToString(), "Action_memes", "Home",
new { id = Model.db.Id, action_m = "repost",  from = "Record_photo_page" },
new AjaxOptions { UpdateTargetId = string.Concat("Wall_memes_mem_block_id_", Model.db.Id) }, new { @class = "link_standart_for_div" })



                        </div>
                    
                    </div>
                    
                        <div class="Record_photo_page_all_comments">
                            
                           @Html.Action("Comments_partial", "Home",new { from= ViewBag.from_type, from_id = ViewBag.from_id, id_mem=Model.db.Id })

                        </div>

                        <div class="div_color_white Record_photo_page_add_comment_block">
                            @using (Html.BeginForm("Add_new_comment", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.Hidden("Stikers_id", "")
                                @Html.Hidden("id_memes", Model.db.Id)
                                @Html.Editor("comment_text", new { })
                                <input type="file" name="uploadImage[0]" />
                                <input type="submit" class="submit" value="Поделиться" />
                            }
                        </div>
                    
                </div>
            </div>
        </div>

                            }






