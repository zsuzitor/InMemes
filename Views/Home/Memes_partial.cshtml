@model Im.Models.Memes_record
@section scripts
    {
    @{ 
/*@Scripts.Render("~/scripts/jquery-3.1.1.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")
 */
    }
   
}
@{ 
    string Memes_under_block_small_like_name = "Memes_under_block_small";
    string Memes_under_block_small_repost_name = "Memes_under_block_small";
    if ((bool)ViewBag.like)
    {
        Memes_under_block_small_like_name = "Memes_under_block_small_true";
    }
    if ((bool)ViewBag.repost)
    {
        Memes_under_block_small_repost_name = "Memes_under_block_small_true";
    }
}




<div class="div_color_white memes_partial_one_mem_block">

    <div class="memes_partial_one_mem_block_left_name">
        @if (Model.db.Source_type == "Personal_record")
        {
            if (Model.Person_source.Image != null)
            {
                <div class="memes_partial_img_person" style="background:url( data:image/jpeg;base64,@Convert.ToBase64String(Model.Person_source.Image) );background-size: cover; ">


                    <a class="link_standart_for_circle_30_div" href='@Url.Action("Group_record", "Home",new { id = Model.Person_source.Person_id } )'></a>
                </div>
            }
            if (Model.Person_source.Image == null)
            {
                <div class="memes_partial_img_person" style="background:url('/Content/images/H98hxNY4xTo.jpg');background-size: cover; ">


                    <a class="link_standart_for_circle_30_div" href='@Url.Action("Group_record", "Home",new { id = Model.Person_source.Person_id } )'></a>
                </div>
            }

            <div class="memes_partial_person_name_block"><p>@Html.ActionLink(Model.Person_source.Name, Model.db.Source_type, "Home", new { id = Model.db.Source_id }, new { })</p></div>


        }
        @if (Model.db.Source_type == "Group_record")
        {
            if (Model.Group_source.Image != null)
            {
                <div class="memes_partial_img_person" style="background:url( data:image/jpeg;base64,@Convert.ToBase64String(Model.Group_source.Image) );background-size: cover; ">


                    <a class="link_standart_for_circle_30_div" href='@Url.Action("Group_record", "Home",new { id = Model.Group_source.Id } )'></a>
                </div>
            }
            if (Model.Group_source.Image == null)
            {
                <div class="memes_partial_img_person" style="background:url('/Content/images/H98hxNY4xTo.jpg');background-size: cover; ">


                    <a class="link_standart_for_circle_30_div" href='@Url.Action("Group_record", "Home",new { id = Model.Group_source.Id } )'></a>
                </div>
            }

            <div class="memes_partial_person_name_block"><p>@Html.ActionLink(Model.Group_source.Name, Model.db.Source_type, "Home", new { id = Model.db.Source_id }, new { })</p></div>

        }

        <p>@Model.db.Description</p>
        <p>@Model.db.Birthday</p>
    </div>
    <div class="memes_partial_options_mem_all">
        <div class="memes_partial_options_mem">
            @Html.ActionLink("X", "Delete", "Home", new { what = "memes", from = ViewBag.from, from_id = ViewBag.from_id, id = Model.db.Id, }, new { })
        </div>
        <div class="memes_partial_options_mem_open">

        </div>
    </div>

    @if (Model.Image != null)
    {
        <div class="Wall_memes_one_mem_img">
            @Html.Raw(string.Concat("<img class='' id='' ", " src=\"data:image/jpeg;base64,"
                                                                     , Convert.ToBase64String(Model.Image.bytes), "\" />"))
        </div>
    }

    <div>
        @if (Model.Images != null)
        {
            foreach (var i2 in Model.Images)
            {
                <div>
                    @Html.Raw(string.Concat("<img class='' id='' ", " src=\"data:image/jpeg;base64,"
                                                 , Convert.ToBase64String(i2.Image.bytes), "\" />"));
                </div>
            }
        }
    </div>
    <hr />
    <div class="Memes_partial_under_all_block">
        <div>

            <div class=@Memes_under_block_small_like_name>
                @Ajax.ActionLink("Лайков:" + ((int)ViewBag.count_like).ToString(), "Action_memes", "Home",
new { id = Model.db.Id, action_m = "like" },
new AjaxOptions { UpdateTargetId = string.Concat("Wall_memes_mem_block_id_", Model.db.Id) }, new { @class = "link_standart_for_div" })
                @{
//ViewBag.like от этого класс
// ViewBag.repost
                }


            </div>
            <div class="Memes_under_block_small">



            </div>
            <div class=@Memes_under_block_small_repost_name>
                @Ajax.ActionLink("Репостов:" + ((int)ViewBag.count_repost).ToString(), "Action_memes", "Home",
new { id = Model.db.Id, action_m = "repost" },
new AjaxOptions { UpdateTargetId = string.Concat("Wall_memes_mem_block_id_", Model.db.Id) }, new { @class = "link_standart_for_div" })



            </div>
        </div>
    <div>
        <div class="memes_partial_all_comments">
            @Html.Action("Comments_partial", "Home", new { from = ViewBag.from, from_id = ViewBag.from_id, id_mem = Model.db.Id,size="big1" })

        </div>

        <div class="div_color_white memes_partial_add_comment_block">
            <hr />
            @using (Html.BeginForm("Add_new_comment", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.Hidden("Stikers_id", "")
                @Html.Hidden("id_memes", Model.db.Id)
                @Html.Editor("comment_text", new { })
                <input type="file" name="uploadImage[0]" />
                                <input type="submit" class="submit" value="Поделиться" />
            }
        </div>

</div>

    </div>
</div>



